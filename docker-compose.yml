version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  fastapi_app:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    depends_on:
      - redis
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - fastapi_app
    restart: always
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - app-network

  celery_worker:
    build: .
    container_name: celery_worker
    command: celery -A app.celery_worker.celery_app worker --loglevel=info -Q training
    depends_on:
      - redis
    env_file:
      - .env
    volumes:
      - .:/app
    restart: always
    networks:
      - app-network